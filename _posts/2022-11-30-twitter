---
layout: single
title:  "로그스태시를 활용한 한글 트위터 데이터 분석"
typora-root-url: ../
---

# 로그스태시를 활용한 한글 트위터 데이터 분석

로그스태시 config 폴더 내에 logstash-twitter.conf 설장 파일을 하나 만들고 파이프라인을 작성

```
input {
	udp {
		port => 5959
		codec => json
  }

}

output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "twitter_ko"
  }
}
```

로그스태시 config 폴더 내에 logstash-twitter.conf 설장 파일을 하나 만들고 파이프라인 작성 후 실행
`D:\elastick\logstash-7.10.1>.\bin\logstash.bat -f .\config\logstash-twitter.conf`
로그스태시가 정상적으로 실행되면 엘라스틱 서치에 'twitter_ko' 인덱스 생성

키바나 인덱스 패턴도  twitter_ko 라는 인덱스패턴 생성(step 2에서 날짜/시간 필드는 @timestamp 필드를 선택)




## 한글 형태소 분석기

### 노리 분석기 설치

`D:\elastick\elasticsearch-7.10.1>.\bin\elasticsearch-plugin install analysis-nori`



## 리인덱싱

#### reindex 함수를 사용하기 위한 새로운 인덱스 생성

```json
PUT twitter_ko_v2
{
  "settings": {
    "analysis": {
      "analyzer": {
        "korean": {
          "tokenizer": "nori_tokenizer"
        }
      }
    }
  },
  "mappings": {
    "properties": {
      "message": {
        "type": "text",
        "analyzer": "korean"
      }
    }
  }
}
```




reindex 함수를 사용하려면 2개의 인덱스가 필요하다. 변경하기 전 소스 인덱스와 변경후 결과 인덱스다.

소스 인덱스는 twitter_ko 이고 결과 인덱스는 노리 분석기가 적용된 twitter_ko_v2다.

리인덱싱을 하기 전에 결과 인덱스가 되는 twitter_ko_v2 인덱스 매핑 작업을 해야 한다.

먼저 세팅(settings)에서 분석기(analysis)를 정의한다.

분석기(analysis) 이름은 korean

토크나이저(tokenizer)는 nori_tokenizer


매핑 설정에서 기본 분석기가 아닌 새로 정의했던 korean 분석기를 사용한다.



### reindex 동작 요청

```json
POST _reindex
{
  "source": {
    "index": "twitter_ko"
  },
  "dest": {
    "index": "twitter_ko_v2"
  }
}
```



###### twitter_ko 와 같은 방식으로 twitter_ko_v2 인덱스 패턴 생성 후 Discover 메뉴에서 '코로나' 검색
![코로나검색](https://raw.githubusercontent.com/EL55/EL55.github.io/master/img/corona_result.png)



## 실시간 데이터 시각화

트위터에서 실시간으로 발생하는 임의의 트위터 데이터를 입수하고 이를 시각화해보자.

트위터 플러그인의 옵션을 수정해야 한다.

logstash-twitter-realtime.conf 파일을 생성하고 예시처럼 파이프라인을 작성한다.

```
input {
  twitter {
    consumer_key => "<API KEY>"
    consumer_secret => "<API SECRET KEY>"
    oauth_token => "<ACCESS TOKEN>"
    oauth_token_secret => "<ACCESS TOKEN SECRET>"
    use_samples => true
  }
}
filter {
  mutate {
    gsub => [
      "message", "@[^ ]+", "@*****"
    ]
  }
}
output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "twitter_all"
  }
}
```



기존 키워드 검색 대신 use_samples 옵션을 이용해 공개된 트위터를 랜덤하게 입수할 수 있다. 그리고 엘라스틱 주소도 twitter_all이라는 이름으로 변경 후 실행

1. `D:\elastick\logstash-7.10.1>.\bin\logstash.bat -f .\config\logstash-twitter-realtime.conf`
2. 로그스태시가 정상적으로 실행되면 엘라스틱 서치에 'twitter_all' 인덱스 생성
3. 키바나 인덱스 패턴도  twitter_all 이라는 이름으로 인덱스패턴 생성(step 2에서 날짜/시간 필드는 @timestamp 필드를 선택)



### 시각화(Tag Cloud)

1. 시각화에서 Tag Cloud를 선택
2. 인덱스 패턴은 twitter_all 을 선택한다. 
3. 버킷 Aggregation 은 Terms 집계를 선택한다. 
4. Field는 해시태그가 저장된 해시태그(hashtags.text.keyword)를 선택한다.
5. 메트릭은 Count를 선택한다. 

해시태그가 많은 순서로 상위 5개를 보여주는데 이를 통해 현재 주목받는 이슈가 무엇인지 알 수 있다. 

타임피커를 수정하여 리프레시 타임을 5초로 선택하고 Start 버튼을 누르면 5초마다 해시태그를 카운트해서 상위 5개를 나타낼 수도 있다.

![시각화](https://raw.githubusercontent.com/EL55/EL55.github.io/master/img/%EC%8B%9C%EA%B0%81%ED%99%94.png)



## 정리

로그스태시를 이용해 실시간 트위터 데이터를 엘라스틱서치로 저장하고 키바나에서 시각화
한글 데이터 역인덱싱
리인덱싱
실시간 데이터 시각화



